<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ggjj.zhzz.mapper.LocMapper" >
  <resultMap id="BaseResultMap" type="com.ggjj.zhzz.pojo.Loc" >
    <id column="loc" property="loc" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="putawayzone" property="putawayzone" jdbcType="VARCHAR" />
    <result column="stacklimit" property="stacklimit" jdbcType="INTEGER" />
    <result column="footprint" property="footprint" jdbcType="INTEGER" />
    <result column="quantity" property="quantity" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    loc, type, putawayzone, stacklimit, footprint, quantity
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ggjj.zhzz.pojo.LocExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from loc
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from loc
    where loc = #{loc,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from loc
    where loc = #{loc,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ggjj.zhzz.pojo.LocExample" >
    delete from loc
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ggjj.zhzz.pojo.Loc" >
    insert into loc (loc, type, putawayzone, 
      stacklimit, footprint, quantity
      )
    values (#{loc,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR}, #{putawayzone,jdbcType=VARCHAR}, 
      #{stacklimit,jdbcType=INTEGER}, #{footprint,jdbcType=INTEGER}, #{quantity,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ggjj.zhzz.pojo.Loc" >
    insert into loc
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="loc != null" >
        loc,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="putawayzone != null" >
        putawayzone,
      </if>
      <if test="stacklimit != null" >
        stacklimit,
      </if>
      <if test="footprint != null" >
        footprint,
      </if>
      <if test="quantity != null" >
        quantity,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="loc != null" >
        #{loc,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="putawayzone != null" >
        #{putawayzone,jdbcType=VARCHAR},
      </if>
      <if test="stacklimit != null" >
        #{stacklimit,jdbcType=INTEGER},
      </if>
      <if test="footprint != null" >
        #{footprint,jdbcType=INTEGER},
      </if>
      <if test="quantity != null" >
        #{quantity,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ggjj.zhzz.pojo.LocExample" resultType="java.lang.Integer" >
    select count(*) from loc
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update loc
    <set >
      <if test="record.loc != null" >
        loc = #{record.loc,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.putawayzone != null" >
        putawayzone = #{record.putawayzone,jdbcType=VARCHAR},
      </if>
      <if test="record.stacklimit != null" >
        stacklimit = #{record.stacklimit,jdbcType=INTEGER},
      </if>
      <if test="record.footprint != null" >
        footprint = #{record.footprint,jdbcType=INTEGER},
      </if>
      <if test="record.quantity != null" >
        quantity = #{record.quantity,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update loc
    set loc = #{record.loc,jdbcType=INTEGER},
      type = #{record.type,jdbcType=VARCHAR},
      putawayzone = #{record.putawayzone,jdbcType=VARCHAR},
      stacklimit = #{record.stacklimit,jdbcType=INTEGER},
      footprint = #{record.footprint,jdbcType=INTEGER},
      quantity = #{record.quantity,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ggjj.zhzz.pojo.Loc" >
    update loc
    <set >
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="putawayzone != null" >
        putawayzone = #{putawayzone,jdbcType=VARCHAR},
      </if>
      <if test="stacklimit != null" >
        stacklimit = #{stacklimit,jdbcType=INTEGER},
      </if>
      <if test="footprint != null" >
        footprint = #{footprint,jdbcType=INTEGER},
      </if>
      <if test="quantity != null" >
        quantity = #{quantity,jdbcType=INTEGER},
      </if>
    </set>
    where loc = #{loc,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ggjj.zhzz.pojo.Loc" >
    update loc
    set type = #{type,jdbcType=VARCHAR},
      putawayzone = #{putawayzone,jdbcType=VARCHAR},
      stacklimit = #{stacklimit,jdbcType=INTEGER},
      footprint = #{footprint,jdbcType=INTEGER},
      quantity = #{quantity,jdbcType=INTEGER}
    where loc = #{loc,jdbcType=INTEGER}
  </update>
</mapper>